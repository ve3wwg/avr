//////////////////////////////////////////////////////////////////////
// test2.cpp -- Test Initialization of V-USB
// Date: Sat Jan 24 19:07:30 2015  (C) Warren W. Gay VE3WWG 
///////////////////////////////////////////////////////////////////////
// 
// This module is used in conjunction with osx/test2. The OSX/Linux
// test program communicates with the ATmega328p, telling it to turn
// the LED off, and then back on again (assuming LED active high).
// 
//////////////////////////////////////////////////////////////////////

#include <avr/io.h>
#include <avr/interrupt.h>
#include <util/delay.h>

//////////////////////////////////////////////////////////////////////
// V-USB is C-based
//////////////////////////////////////////////////////////////////////

extern "C" {
#include "usbdrv.h"

usbMsgLen_t usbFunctionSetup(uchar setupData[8]);
}

//////////////////////////////////////////////////////////////////////
// Make sure we run at the full 12-MHz
//////////////////////////////////////////////////////////////////////

static void
set_cpu_clock() {
	CLKPR = _BV(CLKPCE);
	CLKPR = 0x00;			// No clock divisor
}

//////////////////////////////////////////////////////////////////////
// Turn LED on/off
//////////////////////////////////////////////////////////////////////

static void
led_on(unsigned on) {
	if ( on )
		PORTB |= _BV(PORTB5);	// Turn on LED 
	else	PORTB &= ~_BV(PORTB5);	// Else turn off 
}

//////////////////////////////////////////////////////////////////////
// Process control messages for LED
//////////////////////////////////////////////////////////////////////

usbMsgLen_t
usbFunctionSetup(uchar setupData[8]) {
	usbRequest_t *rq = (usbRequest_t *)setupData;	// cast to structured data for parsing

	switch(rq->bRequest){
	case 1:
		led_on(rq->wValue.bytes[0]);		// evaluate low byte only
		return 0;				// no data block sent or received
	}

	return 0;					// ignore all unknown requests
}

//////////////////////////////////////////////////////////////////////
// Initialize the V-USB software
//////////////////////////////////////////////////////////////////////

static void
usb_initialize() {

	DDRD = ~(_BV(PORTB4)|_BV(PORTD2));	// D+ and D- as inputs

	cli();
	usbDeviceDisconnect();
	led_on(0);
	_delay_ms(700);

	led_on(1);
	usbInit();
	sei();
}

//////////////////////////////////////////////////////////////////////
// General Initialization
//////////////////////////////////////////////////////////////////////

static void
initialize() {

	led_on(1);
	DDRB |= _BV(DDB5);
	set_cpu_clock();

	usb_initialize();
}

//////////////////////////////////////////////////////////////////////
// Main program
//////////////////////////////////////////////////////////////////////

int
main() 	{
	
	initialize();		// Perform initialization

	for (;;) {
		usbPoll();	// Perform V-USB stuff
	}

	return 0;
}

// End test2.cpp

